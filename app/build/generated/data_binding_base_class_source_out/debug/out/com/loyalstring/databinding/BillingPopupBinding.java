// Generated by view binder compiler. Do not edit!
package com.loyalstring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.loyalstring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BillingPopupBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText etBalanceAmount;

  @NonNull
  public final EditText etCourierCharges;

  @NonNull
  public final EditText etHallmarkCharges;

  @NonNull
  public final EditText etIgstAmount;

  private BillingPopupBinding(@NonNull LinearLayout rootView, @NonNull Button btnSave,
      @NonNull EditText etBalanceAmount, @NonNull EditText etCourierCharges,
      @NonNull EditText etHallmarkCharges, @NonNull EditText etIgstAmount) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.etBalanceAmount = etBalanceAmount;
    this.etCourierCharges = etCourierCharges;
    this.etHallmarkCharges = etHallmarkCharges;
    this.etIgstAmount = etIgstAmount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BillingPopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BillingPopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.billing_popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BillingPopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.etBalanceAmount;
      EditText etBalanceAmount = ViewBindings.findChildViewById(rootView, id);
      if (etBalanceAmount == null) {
        break missingId;
      }

      id = R.id.etCourierCharges;
      EditText etCourierCharges = ViewBindings.findChildViewById(rootView, id);
      if (etCourierCharges == null) {
        break missingId;
      }

      id = R.id.etHallmarkCharges;
      EditText etHallmarkCharges = ViewBindings.findChildViewById(rootView, id);
      if (etHallmarkCharges == null) {
        break missingId;
      }

      id = R.id.etIgstAmount;
      EditText etIgstAmount = ViewBindings.findChildViewById(rootView, id);
      if (etIgstAmount == null) {
        break missingId;
      }

      return new BillingPopupBinding((LinearLayout) rootView, btnSave, etBalanceAmount,
          etCourierCharges, etHallmarkCharges, etIgstAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
