// Generated by view binder compiler. Do not edit!
package com.loyalstring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.loyalstring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityActivationpageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText emailBox;

  @NonNull
  public final Button loginBtn;

  @NonNull
  public final EditText passwordBox;

  @NonNull
  public final TextView resendOtp;

  @NonNull
  public final ImageView togglePasswordVisibility;

  private ActivityActivationpageBinding(@NonNull RelativeLayout rootView,
      @NonNull EditText emailBox, @NonNull Button loginBtn, @NonNull EditText passwordBox,
      @NonNull TextView resendOtp, @NonNull ImageView togglePasswordVisibility) {
    this.rootView = rootView;
    this.emailBox = emailBox;
    this.loginBtn = loginBtn;
    this.passwordBox = passwordBox;
    this.resendOtp = resendOtp;
    this.togglePasswordVisibility = togglePasswordVisibility;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityActivationpageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityActivationpageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_activationpage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityActivationpageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emailBox;
      EditText emailBox = ViewBindings.findChildViewById(rootView, id);
      if (emailBox == null) {
        break missingId;
      }

      id = R.id.loginBtn;
      Button loginBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginBtn == null) {
        break missingId;
      }

      id = R.id.passwordBox;
      EditText passwordBox = ViewBindings.findChildViewById(rootView, id);
      if (passwordBox == null) {
        break missingId;
      }

      id = R.id.resendOtp;
      TextView resendOtp = ViewBindings.findChildViewById(rootView, id);
      if (resendOtp == null) {
        break missingId;
      }

      id = R.id.togglePasswordVisibility;
      ImageView togglePasswordVisibility = ViewBindings.findChildViewById(rootView, id);
      if (togglePasswordVisibility == null) {
        break missingId;
      }

      return new ActivityActivationpageBinding((RelativeLayout) rootView, emailBox, loginBtn,
          passwordBox, resendOtp, togglePasswordVisibility);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
