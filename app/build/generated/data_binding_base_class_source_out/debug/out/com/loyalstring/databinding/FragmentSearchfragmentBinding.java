// Generated by view binder compiler. Do not edit!
package com.loyalstring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.loyalstring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchfragmentBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView barcode;

  @NonNull
  public final TextView itemcode;

  @NonNull
  public final TextView pdialog;

  @NonNull
  public final TextView percent;

  @NonNull
  public final EditText searchbar;

  @NonNull
  public final RecyclerView searchrecycler;

  @NonNull
  public final LinearLayout singlefbtns;

  @NonNull
  public final ImageView singleimage;

  @NonNull
  public final LinearLayout singlelist;

  @NonNull
  public final LinearLayout singlereset;

  @NonNull
  public final LinearLayout singlesavelay;

  @NonNull
  public final LinearLayout singlescan;

  @NonNull
  public final TextView singletext;

  @NonNull
  public final TextView sno;

  @NonNull
  public final RelativeLayout top;

  private FragmentSearchfragmentBinding(@NonNull FrameLayout rootView, @NonNull TextView barcode,
      @NonNull TextView itemcode, @NonNull TextView pdialog, @NonNull TextView percent,
      @NonNull EditText searchbar, @NonNull RecyclerView searchrecycler,
      @NonNull LinearLayout singlefbtns, @NonNull ImageView singleimage,
      @NonNull LinearLayout singlelist, @NonNull LinearLayout singlereset,
      @NonNull LinearLayout singlesavelay, @NonNull LinearLayout singlescan,
      @NonNull TextView singletext, @NonNull TextView sno, @NonNull RelativeLayout top) {
    this.rootView = rootView;
    this.barcode = barcode;
    this.itemcode = itemcode;
    this.pdialog = pdialog;
    this.percent = percent;
    this.searchbar = searchbar;
    this.searchrecycler = searchrecycler;
    this.singlefbtns = singlefbtns;
    this.singleimage = singleimage;
    this.singlelist = singlelist;
    this.singlereset = singlereset;
    this.singlesavelay = singlesavelay;
    this.singlescan = singlescan;
    this.singletext = singletext;
    this.sno = sno;
    this.top = top;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchfragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchfragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_searchfragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchfragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barcode;
      TextView barcode = ViewBindings.findChildViewById(rootView, id);
      if (barcode == null) {
        break missingId;
      }

      id = R.id.itemcode;
      TextView itemcode = ViewBindings.findChildViewById(rootView, id);
      if (itemcode == null) {
        break missingId;
      }

      id = R.id.pdialog;
      TextView pdialog = ViewBindings.findChildViewById(rootView, id);
      if (pdialog == null) {
        break missingId;
      }

      id = R.id.percent;
      TextView percent = ViewBindings.findChildViewById(rootView, id);
      if (percent == null) {
        break missingId;
      }

      id = R.id.searchbar;
      EditText searchbar = ViewBindings.findChildViewById(rootView, id);
      if (searchbar == null) {
        break missingId;
      }

      id = R.id.searchrecycler;
      RecyclerView searchrecycler = ViewBindings.findChildViewById(rootView, id);
      if (searchrecycler == null) {
        break missingId;
      }

      id = R.id.singlefbtns;
      LinearLayout singlefbtns = ViewBindings.findChildViewById(rootView, id);
      if (singlefbtns == null) {
        break missingId;
      }

      id = R.id.singleimage;
      ImageView singleimage = ViewBindings.findChildViewById(rootView, id);
      if (singleimage == null) {
        break missingId;
      }

      id = R.id.singlelist;
      LinearLayout singlelist = ViewBindings.findChildViewById(rootView, id);
      if (singlelist == null) {
        break missingId;
      }

      id = R.id.singlereset;
      LinearLayout singlereset = ViewBindings.findChildViewById(rootView, id);
      if (singlereset == null) {
        break missingId;
      }

      id = R.id.singlesavelay;
      LinearLayout singlesavelay = ViewBindings.findChildViewById(rootView, id);
      if (singlesavelay == null) {
        break missingId;
      }

      id = R.id.singlescan;
      LinearLayout singlescan = ViewBindings.findChildViewById(rootView, id);
      if (singlescan == null) {
        break missingId;
      }

      id = R.id.singletext;
      TextView singletext = ViewBindings.findChildViewById(rootView, id);
      if (singletext == null) {
        break missingId;
      }

      id = R.id.sno;
      TextView sno = ViewBindings.findChildViewById(rootView, id);
      if (sno == null) {
        break missingId;
      }

      id = R.id.top;
      RelativeLayout top = ViewBindings.findChildViewById(rootView, id);
      if (top == null) {
        break missingId;
      }

      return new FragmentSearchfragmentBinding((FrameLayout) rootView, barcode, itemcode, pdialog,
          percent, searchbar, searchrecycler, singlefbtns, singleimage, singlelist, singlereset,
          singlesavelay, singlescan, singletext, sno, top);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
