// Generated by view binder compiler. Do not edit!
package com.loyalstring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.loyalstring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RecyclerView listrecycler;

  @NonNull
  public final EditText searchbar;

  @NonNull
  public final Button startbtn;

  @NonNull
  public final Button stopbtn;

  @NonNull
  public final Button totalbtn;

  private ActivityListBinding(@NonNull RelativeLayout rootView, @NonNull RecyclerView listrecycler,
      @NonNull EditText searchbar, @NonNull Button startbtn, @NonNull Button stopbtn,
      @NonNull Button totalbtn) {
    this.rootView = rootView;
    this.listrecycler = listrecycler;
    this.searchbar = searchbar;
    this.startbtn = startbtn;
    this.stopbtn = stopbtn;
    this.totalbtn = totalbtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.listrecycler;
      RecyclerView listrecycler = ViewBindings.findChildViewById(rootView, id);
      if (listrecycler == null) {
        break missingId;
      }

      id = R.id.searchbar;
      EditText searchbar = ViewBindings.findChildViewById(rootView, id);
      if (searchbar == null) {
        break missingId;
      }

      id = R.id.startbtn;
      Button startbtn = ViewBindings.findChildViewById(rootView, id);
      if (startbtn == null) {
        break missingId;
      }

      id = R.id.stopbtn;
      Button stopbtn = ViewBindings.findChildViewById(rootView, id);
      if (stopbtn == null) {
        break missingId;
      }

      id = R.id.totalbtn;
      Button totalbtn = ViewBindings.findChildViewById(rootView, id);
      if (totalbtn == null) {
        break missingId;
      }

      return new ActivityListBinding((RelativeLayout) rootView, listrecycler, searchbar, startbtn,
          stopbtn, totalbtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
