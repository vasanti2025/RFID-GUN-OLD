// Generated by view binder compiler. Do not edit!
package com.loyalstring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.loyalstring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySyncSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final CheckBox checkboxBills;

  @NonNull
  public final CheckBox checkboxInventory;

  @NonNull
  public final CheckBox checkboxProduct;

  @NonNull
  public final CheckBox checkboxReports;

  private ActivitySyncSettingsBinding(@NonNull LinearLayout rootView, @NonNull Button buttonSave,
      @NonNull CheckBox checkboxBills, @NonNull CheckBox checkboxInventory,
      @NonNull CheckBox checkboxProduct, @NonNull CheckBox checkboxReports) {
    this.rootView = rootView;
    this.buttonSave = buttonSave;
    this.checkboxBills = checkboxBills;
    this.checkboxInventory = checkboxInventory;
    this.checkboxProduct = checkboxProduct;
    this.checkboxReports = checkboxReports;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySyncSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySyncSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_sync_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySyncSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_save;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.checkbox_bills;
      CheckBox checkboxBills = ViewBindings.findChildViewById(rootView, id);
      if (checkboxBills == null) {
        break missingId;
      }

      id = R.id.checkbox_inventory;
      CheckBox checkboxInventory = ViewBindings.findChildViewById(rootView, id);
      if (checkboxInventory == null) {
        break missingId;
      }

      id = R.id.checkbox_product;
      CheckBox checkboxProduct = ViewBindings.findChildViewById(rootView, id);
      if (checkboxProduct == null) {
        break missingId;
      }

      id = R.id.checkbox_reports;
      CheckBox checkboxReports = ViewBindings.findChildViewById(rootView, id);
      if (checkboxReports == null) {
        break missingId;
      }

      return new ActivitySyncSettingsBinding((LinearLayout) rootView, buttonSave, checkboxBills,
          checkboxInventory, checkboxProduct, checkboxReports);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
