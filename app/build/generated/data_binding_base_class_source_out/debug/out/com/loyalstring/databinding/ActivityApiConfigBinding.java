// Generated by view binder compiler. Do not edit!
package com.loyalstring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.loyalstring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityApiConfigBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText etApiKey;

  @NonNull
  public final EditText etApiUrl;

  @NonNull
  public final EditText etOauthClientId;

  @NonNull
  public final EditText etOauthClientSecret;

  @NonNull
  public final EditText etPassword;

  @NonNull
  public final EditText etUsername;

  @NonNull
  public final LinearLayout layoutApiKey;

  @NonNull
  public final LinearLayout layoutBasicAuth;

  @NonNull
  public final LinearLayout layoutOauth;

  @NonNull
  public final Spinner spinnerAuthMethod;

  @NonNull
  public final Spinner spinnerHttpMethod;

  private ActivityApiConfigBinding(@NonNull LinearLayout rootView, @NonNull Button btnSave,
      @NonNull EditText etApiKey, @NonNull EditText etApiUrl, @NonNull EditText etOauthClientId,
      @NonNull EditText etOauthClientSecret, @NonNull EditText etPassword,
      @NonNull EditText etUsername, @NonNull LinearLayout layoutApiKey,
      @NonNull LinearLayout layoutBasicAuth, @NonNull LinearLayout layoutOauth,
      @NonNull Spinner spinnerAuthMethod, @NonNull Spinner spinnerHttpMethod) {
    this.rootView = rootView;
    this.btnSave = btnSave;
    this.etApiKey = etApiKey;
    this.etApiUrl = etApiUrl;
    this.etOauthClientId = etOauthClientId;
    this.etOauthClientSecret = etOauthClientSecret;
    this.etPassword = etPassword;
    this.etUsername = etUsername;
    this.layoutApiKey = layoutApiKey;
    this.layoutBasicAuth = layoutBasicAuth;
    this.layoutOauth = layoutOauth;
    this.spinnerAuthMethod = spinnerAuthMethod;
    this.spinnerHttpMethod = spinnerHttpMethod;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityApiConfigBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityApiConfigBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_api_config, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityApiConfigBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_save;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.et_api_key;
      EditText etApiKey = ViewBindings.findChildViewById(rootView, id);
      if (etApiKey == null) {
        break missingId;
      }

      id = R.id.et_api_url;
      EditText etApiUrl = ViewBindings.findChildViewById(rootView, id);
      if (etApiUrl == null) {
        break missingId;
      }

      id = R.id.et_oauth_client_id;
      EditText etOauthClientId = ViewBindings.findChildViewById(rootView, id);
      if (etOauthClientId == null) {
        break missingId;
      }

      id = R.id.et_oauth_client_secret;
      EditText etOauthClientSecret = ViewBindings.findChildViewById(rootView, id);
      if (etOauthClientSecret == null) {
        break missingId;
      }

      id = R.id.et_password;
      EditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.et_username;
      EditText etUsername = ViewBindings.findChildViewById(rootView, id);
      if (etUsername == null) {
        break missingId;
      }

      id = R.id.layout_api_key;
      LinearLayout layoutApiKey = ViewBindings.findChildViewById(rootView, id);
      if (layoutApiKey == null) {
        break missingId;
      }

      id = R.id.layout_basic_auth;
      LinearLayout layoutBasicAuth = ViewBindings.findChildViewById(rootView, id);
      if (layoutBasicAuth == null) {
        break missingId;
      }

      id = R.id.layout_oauth;
      LinearLayout layoutOauth = ViewBindings.findChildViewById(rootView, id);
      if (layoutOauth == null) {
        break missingId;
      }

      id = R.id.spinner_auth_method;
      Spinner spinnerAuthMethod = ViewBindings.findChildViewById(rootView, id);
      if (spinnerAuthMethod == null) {
        break missingId;
      }

      id = R.id.spinner_http_method;
      Spinner spinnerHttpMethod = ViewBindings.findChildViewById(rootView, id);
      if (spinnerHttpMethod == null) {
        break missingId;
      }

      return new ActivityApiConfigBinding((LinearLayout) rootView, btnSave, etApiKey, etApiUrl,
          etOauthClientId, etOauthClientSecret, etPassword, etUsername, layoutApiKey,
          layoutBasicAuth, layoutOauth, spinnerAuthMethod, spinnerHttpMethod);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
