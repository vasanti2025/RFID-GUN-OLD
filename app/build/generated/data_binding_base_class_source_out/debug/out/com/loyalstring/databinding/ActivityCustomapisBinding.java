// Generated by view binder compiler. Do not edit!
package com.loyalstring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.loyalstring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCustomapisBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText apiurl;

  @NonNull
  public final Button rfidseturl;

  @NonNull
  public final EditText rfidurl;

  @NonNull
  public final Button rfidverifybtn;

  @NonNull
  public final Button seturl;

  @NonNull
  public final Button verifybtn;

  private ActivityCustomapisBinding(@NonNull RelativeLayout rootView, @NonNull EditText apiurl,
      @NonNull Button rfidseturl, @NonNull EditText rfidurl, @NonNull Button rfidverifybtn,
      @NonNull Button seturl, @NonNull Button verifybtn) {
    this.rootView = rootView;
    this.apiurl = apiurl;
    this.rfidseturl = rfidseturl;
    this.rfidurl = rfidurl;
    this.rfidverifybtn = rfidverifybtn;
    this.seturl = seturl;
    this.verifybtn = verifybtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCustomapisBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCustomapisBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_customapis, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCustomapisBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apiurl;
      EditText apiurl = ViewBindings.findChildViewById(rootView, id);
      if (apiurl == null) {
        break missingId;
      }

      id = R.id.rfidseturl;
      Button rfidseturl = ViewBindings.findChildViewById(rootView, id);
      if (rfidseturl == null) {
        break missingId;
      }

      id = R.id.rfidurl;
      EditText rfidurl = ViewBindings.findChildViewById(rootView, id);
      if (rfidurl == null) {
        break missingId;
      }

      id = R.id.rfidverifybtn;
      Button rfidverifybtn = ViewBindings.findChildViewById(rootView, id);
      if (rfidverifybtn == null) {
        break missingId;
      }

      id = R.id.seturl;
      Button seturl = ViewBindings.findChildViewById(rootView, id);
      if (seturl == null) {
        break missingId;
      }

      id = R.id.verifybtn;
      Button verifybtn = ViewBindings.findChildViewById(rootView, id);
      if (verifybtn == null) {
        break missingId;
      }

      return new ActivityCustomapisBinding((RelativeLayout) rootView, apiurl, rfidseturl, rfidurl,
          rfidverifybtn, seturl, verifybtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
