// Generated by view binder compiler. Do not edit!
package com.loyalstring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.loyalstring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInventoryfragmentBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView avlqtytotal;

  @NonNull
  public final LinearLayout cancellay;

  @NonNull
  public final LinearLayout catlay;

  @NonNull
  public final LinearLayout catprolay;

  @NonNull
  public final RecyclerView catprorecycler;

  @NonNull
  public final TextView ccagetext;

  @NonNull
  public final TextView ccbarcodetext;

  @NonNull
  public final TextView ccboxtext;

  @NonNull
  public final TextView ccgwttext;

  @NonNull
  public final TextView ccitemcodetext;

  @NonNull
  public final TextView ccmatchqtytext;

  @NonNull
  public final TextView ccmgwttext;

  @NonNull
  public final TextView ccmnetwtext;

  @NonNull
  public final TextView ccnetwtext;

  @NonNull
  public final TextView ccpuritytext;

  @NonNull
  public final CheckBox cfage;

  @NonNull
  public final CheckBox cfbarcode;

  @NonNull
  public final CheckBox cfbox;

  @NonNull
  public final CheckBox cfgross;

  @NonNull
  public final LinearLayout cfilterlayout;

  @NonNull
  public final CheckBox cfitemcode;

  @NonNull
  public final CheckBox cfmatchqty;

  @NonNull
  public final CheckBox cfmgwt;

  @NonNull
  public final CheckBox cfnetwt;

  @NonNull
  public final CheckBox cfpurity;

  @NonNull
  public final TextView checkb1text;

  @NonNull
  public final TextView checkb2text;

  @NonNull
  public final TextView checkb3text;

  @NonNull
  public final TextView checkb4text;

  @NonNull
  public final TextView checkb5text;

  @NonNull
  public final TextView checkb6text;

  @NonNull
  public final TextView checkb7text;

  @NonNull
  public final LinearLayout emaillay;

  @NonNull
  public final CheckBox fage;

  @NonNull
  public final CheckBox fbarcode;

  @NonNull
  public final CheckBox fbox;

  @NonNull
  public final LinearLayout fbtns;

  @NonNull
  public final CheckBox fgross;

  @NonNull
  public final LinearLayout filterlayout;

  @NonNull
  public final CheckBox fitemcode;

  @NonNull
  public final CheckBox fnetwt;

  @NonNull
  public final LinearLayout fourbtns;

  @NonNull
  public final CheckBox fpurity;

  @NonNull
  public final ImageView gimage;

  @NonNull
  public final TextView gtext;

  @NonNull
  public final TextView gwttotal;

  @NonNull
  public final HorizontalScrollView headingscroll;

  @NonNull
  public final LinearLayout iboxlayout;

  @NonNull
  public final TextView iboxtext;

  @NonNull
  public final TextView icategorytext;

  @NonNull
  public final LinearLayout icatgorylayout;

  @NonNull
  public final LinearLayout iclearlayout;

  @NonNull
  public final TextView icleartext;

  @NonNull
  public final RelativeLayout imgholder;

  @NonNull
  public final LinearLayout iproductlayout;

  @NonNull
  public final TextView iproducttext;

  @NonNull
  public final RecyclerView irecycler;

  @NonNull
  public final HorizontalScrollView itemscroll;

  @NonNull
  public final ImageView itstatus;

  @NonNull
  public final TextView layliststate;

  @NonNull
  public final LinearLayout listbuttons;

  @NonNull
  public final LinearLayout listlay;

  @NonNull
  public final AppCompatButton matchedbtn;

  @NonNull
  public final TextView matchgwttotal;

  @NonNull
  public final TextView matchqtytotal;

  @NonNull
  public final LinearLayout nemail;

  @NonNull
  public final LinearLayout nlist;

  @NonNull
  public final LinearLayout nreset;

  @NonNull
  public final LinearLayout savelay;

  @NonNull
  public final LinearLayout savelay1;

  @NonNull
  public final View scrollIndicator;

  @NonNull
  public final AppCompatButton searchbtn;

  @NonNull
  public final LinearLayout singlescan;

  @NonNull
  public final TextView tmgwt;

  @NonNull
  public final TextView tmnetwt;

  @NonNull
  public final TextView tmqty;

  @NonNull
  public final TextView tmswt;

  @NonNull
  public final LinearLayout totallay;

  @NonNull
  public final ImageView totalstatus;

  @NonNull
  public final AppCompatButton transferbtn;

  @NonNull
  public final TextView ttgwt;

  @NonNull
  public final TextView ttnetwt;

  @NonNull
  public final TextView ttqty;

  @NonNull
  public final TextView ttswt;

  @NonNull
  public final AppCompatButton unlabelled;

  @NonNull
  public final AppCompatButton unmatchedbtn;

  @NonNull
  public final View vname;

  private FragmentInventoryfragmentBinding(@NonNull FrameLayout rootView,
      @NonNull TextView avlqtytotal, @NonNull LinearLayout cancellay, @NonNull LinearLayout catlay,
      @NonNull LinearLayout catprolay, @NonNull RecyclerView catprorecycler,
      @NonNull TextView ccagetext, @NonNull TextView ccbarcodetext, @NonNull TextView ccboxtext,
      @NonNull TextView ccgwttext, @NonNull TextView ccitemcodetext,
      @NonNull TextView ccmatchqtytext, @NonNull TextView ccmgwttext, @NonNull TextView ccmnetwtext,
      @NonNull TextView ccnetwtext, @NonNull TextView ccpuritytext, @NonNull CheckBox cfage,
      @NonNull CheckBox cfbarcode, @NonNull CheckBox cfbox, @NonNull CheckBox cfgross,
      @NonNull LinearLayout cfilterlayout, @NonNull CheckBox cfitemcode,
      @NonNull CheckBox cfmatchqty, @NonNull CheckBox cfmgwt, @NonNull CheckBox cfnetwt,
      @NonNull CheckBox cfpurity, @NonNull TextView checkb1text, @NonNull TextView checkb2text,
      @NonNull TextView checkb3text, @NonNull TextView checkb4text, @NonNull TextView checkb5text,
      @NonNull TextView checkb6text, @NonNull TextView checkb7text, @NonNull LinearLayout emaillay,
      @NonNull CheckBox fage, @NonNull CheckBox fbarcode, @NonNull CheckBox fbox,
      @NonNull LinearLayout fbtns, @NonNull CheckBox fgross, @NonNull LinearLayout filterlayout,
      @NonNull CheckBox fitemcode, @NonNull CheckBox fnetwt, @NonNull LinearLayout fourbtns,
      @NonNull CheckBox fpurity, @NonNull ImageView gimage, @NonNull TextView gtext,
      @NonNull TextView gwttotal, @NonNull HorizontalScrollView headingscroll,
      @NonNull LinearLayout iboxlayout, @NonNull TextView iboxtext, @NonNull TextView icategorytext,
      @NonNull LinearLayout icatgorylayout, @NonNull LinearLayout iclearlayout,
      @NonNull TextView icleartext, @NonNull RelativeLayout imgholder,
      @NonNull LinearLayout iproductlayout, @NonNull TextView iproducttext,
      @NonNull RecyclerView irecycler, @NonNull HorizontalScrollView itemscroll,
      @NonNull ImageView itstatus, @NonNull TextView layliststate,
      @NonNull LinearLayout listbuttons, @NonNull LinearLayout listlay,
      @NonNull AppCompatButton matchedbtn, @NonNull TextView matchgwttotal,
      @NonNull TextView matchqtytotal, @NonNull LinearLayout nemail, @NonNull LinearLayout nlist,
      @NonNull LinearLayout nreset, @NonNull LinearLayout savelay, @NonNull LinearLayout savelay1,
      @NonNull View scrollIndicator, @NonNull AppCompatButton searchbtn,
      @NonNull LinearLayout singlescan, @NonNull TextView tmgwt, @NonNull TextView tmnetwt,
      @NonNull TextView tmqty, @NonNull TextView tmswt, @NonNull LinearLayout totallay,
      @NonNull ImageView totalstatus, @NonNull AppCompatButton transferbtn, @NonNull TextView ttgwt,
      @NonNull TextView ttnetwt, @NonNull TextView ttqty, @NonNull TextView ttswt,
      @NonNull AppCompatButton unlabelled, @NonNull AppCompatButton unmatchedbtn,
      @NonNull View vname) {
    this.rootView = rootView;
    this.avlqtytotal = avlqtytotal;
    this.cancellay = cancellay;
    this.catlay = catlay;
    this.catprolay = catprolay;
    this.catprorecycler = catprorecycler;
    this.ccagetext = ccagetext;
    this.ccbarcodetext = ccbarcodetext;
    this.ccboxtext = ccboxtext;
    this.ccgwttext = ccgwttext;
    this.ccitemcodetext = ccitemcodetext;
    this.ccmatchqtytext = ccmatchqtytext;
    this.ccmgwttext = ccmgwttext;
    this.ccmnetwtext = ccmnetwtext;
    this.ccnetwtext = ccnetwtext;
    this.ccpuritytext = ccpuritytext;
    this.cfage = cfage;
    this.cfbarcode = cfbarcode;
    this.cfbox = cfbox;
    this.cfgross = cfgross;
    this.cfilterlayout = cfilterlayout;
    this.cfitemcode = cfitemcode;
    this.cfmatchqty = cfmatchqty;
    this.cfmgwt = cfmgwt;
    this.cfnetwt = cfnetwt;
    this.cfpurity = cfpurity;
    this.checkb1text = checkb1text;
    this.checkb2text = checkb2text;
    this.checkb3text = checkb3text;
    this.checkb4text = checkb4text;
    this.checkb5text = checkb5text;
    this.checkb6text = checkb6text;
    this.checkb7text = checkb7text;
    this.emaillay = emaillay;
    this.fage = fage;
    this.fbarcode = fbarcode;
    this.fbox = fbox;
    this.fbtns = fbtns;
    this.fgross = fgross;
    this.filterlayout = filterlayout;
    this.fitemcode = fitemcode;
    this.fnetwt = fnetwt;
    this.fourbtns = fourbtns;
    this.fpurity = fpurity;
    this.gimage = gimage;
    this.gtext = gtext;
    this.gwttotal = gwttotal;
    this.headingscroll = headingscroll;
    this.iboxlayout = iboxlayout;
    this.iboxtext = iboxtext;
    this.icategorytext = icategorytext;
    this.icatgorylayout = icatgorylayout;
    this.iclearlayout = iclearlayout;
    this.icleartext = icleartext;
    this.imgholder = imgholder;
    this.iproductlayout = iproductlayout;
    this.iproducttext = iproducttext;
    this.irecycler = irecycler;
    this.itemscroll = itemscroll;
    this.itstatus = itstatus;
    this.layliststate = layliststate;
    this.listbuttons = listbuttons;
    this.listlay = listlay;
    this.matchedbtn = matchedbtn;
    this.matchgwttotal = matchgwttotal;
    this.matchqtytotal = matchqtytotal;
    this.nemail = nemail;
    this.nlist = nlist;
    this.nreset = nreset;
    this.savelay = savelay;
    this.savelay1 = savelay1;
    this.scrollIndicator = scrollIndicator;
    this.searchbtn = searchbtn;
    this.singlescan = singlescan;
    this.tmgwt = tmgwt;
    this.tmnetwt = tmnetwt;
    this.tmqty = tmqty;
    this.tmswt = tmswt;
    this.totallay = totallay;
    this.totalstatus = totalstatus;
    this.transferbtn = transferbtn;
    this.ttgwt = ttgwt;
    this.ttnetwt = ttnetwt;
    this.ttqty = ttqty;
    this.ttswt = ttswt;
    this.unlabelled = unlabelled;
    this.unmatchedbtn = unmatchedbtn;
    this.vname = vname;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInventoryfragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInventoryfragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_inventoryfragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInventoryfragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.avlqtytotal;
      TextView avlqtytotal = ViewBindings.findChildViewById(rootView, id);
      if (avlqtytotal == null) {
        break missingId;
      }

      id = R.id.cancellay;
      LinearLayout cancellay = ViewBindings.findChildViewById(rootView, id);
      if (cancellay == null) {
        break missingId;
      }

      id = R.id.catlay;
      LinearLayout catlay = ViewBindings.findChildViewById(rootView, id);
      if (catlay == null) {
        break missingId;
      }

      id = R.id.catprolay;
      LinearLayout catprolay = ViewBindings.findChildViewById(rootView, id);
      if (catprolay == null) {
        break missingId;
      }

      id = R.id.catprorecycler;
      RecyclerView catprorecycler = ViewBindings.findChildViewById(rootView, id);
      if (catprorecycler == null) {
        break missingId;
      }

      id = R.id.ccagetext;
      TextView ccagetext = ViewBindings.findChildViewById(rootView, id);
      if (ccagetext == null) {
        break missingId;
      }

      id = R.id.ccbarcodetext;
      TextView ccbarcodetext = ViewBindings.findChildViewById(rootView, id);
      if (ccbarcodetext == null) {
        break missingId;
      }

      id = R.id.ccboxtext;
      TextView ccboxtext = ViewBindings.findChildViewById(rootView, id);
      if (ccboxtext == null) {
        break missingId;
      }

      id = R.id.ccgwttext;
      TextView ccgwttext = ViewBindings.findChildViewById(rootView, id);
      if (ccgwttext == null) {
        break missingId;
      }

      id = R.id.ccitemcodetext;
      TextView ccitemcodetext = ViewBindings.findChildViewById(rootView, id);
      if (ccitemcodetext == null) {
        break missingId;
      }

      id = R.id.ccmatchqtytext;
      TextView ccmatchqtytext = ViewBindings.findChildViewById(rootView, id);
      if (ccmatchqtytext == null) {
        break missingId;
      }

      id = R.id.ccmgwttext;
      TextView ccmgwttext = ViewBindings.findChildViewById(rootView, id);
      if (ccmgwttext == null) {
        break missingId;
      }

      id = R.id.ccmnetwtext;
      TextView ccmnetwtext = ViewBindings.findChildViewById(rootView, id);
      if (ccmnetwtext == null) {
        break missingId;
      }

      id = R.id.ccnetwtext;
      TextView ccnetwtext = ViewBindings.findChildViewById(rootView, id);
      if (ccnetwtext == null) {
        break missingId;
      }

      id = R.id.ccpuritytext;
      TextView ccpuritytext = ViewBindings.findChildViewById(rootView, id);
      if (ccpuritytext == null) {
        break missingId;
      }

      id = R.id.cfage;
      CheckBox cfage = ViewBindings.findChildViewById(rootView, id);
      if (cfage == null) {
        break missingId;
      }

      id = R.id.cfbarcode;
      CheckBox cfbarcode = ViewBindings.findChildViewById(rootView, id);
      if (cfbarcode == null) {
        break missingId;
      }

      id = R.id.cfbox;
      CheckBox cfbox = ViewBindings.findChildViewById(rootView, id);
      if (cfbox == null) {
        break missingId;
      }

      id = R.id.cfgross;
      CheckBox cfgross = ViewBindings.findChildViewById(rootView, id);
      if (cfgross == null) {
        break missingId;
      }

      id = R.id.cfilterlayout;
      LinearLayout cfilterlayout = ViewBindings.findChildViewById(rootView, id);
      if (cfilterlayout == null) {
        break missingId;
      }

      id = R.id.cfitemcode;
      CheckBox cfitemcode = ViewBindings.findChildViewById(rootView, id);
      if (cfitemcode == null) {
        break missingId;
      }

      id = R.id.cfmatchqty;
      CheckBox cfmatchqty = ViewBindings.findChildViewById(rootView, id);
      if (cfmatchqty == null) {
        break missingId;
      }

      id = R.id.cfmgwt;
      CheckBox cfmgwt = ViewBindings.findChildViewById(rootView, id);
      if (cfmgwt == null) {
        break missingId;
      }

      id = R.id.cfnetwt;
      CheckBox cfnetwt = ViewBindings.findChildViewById(rootView, id);
      if (cfnetwt == null) {
        break missingId;
      }

      id = R.id.cfpurity;
      CheckBox cfpurity = ViewBindings.findChildViewById(rootView, id);
      if (cfpurity == null) {
        break missingId;
      }

      id = R.id.checkb1text;
      TextView checkb1text = ViewBindings.findChildViewById(rootView, id);
      if (checkb1text == null) {
        break missingId;
      }

      id = R.id.checkb2text;
      TextView checkb2text = ViewBindings.findChildViewById(rootView, id);
      if (checkb2text == null) {
        break missingId;
      }

      id = R.id.checkb3text;
      TextView checkb3text = ViewBindings.findChildViewById(rootView, id);
      if (checkb3text == null) {
        break missingId;
      }

      id = R.id.checkb4text;
      TextView checkb4text = ViewBindings.findChildViewById(rootView, id);
      if (checkb4text == null) {
        break missingId;
      }

      id = R.id.checkb5text;
      TextView checkb5text = ViewBindings.findChildViewById(rootView, id);
      if (checkb5text == null) {
        break missingId;
      }

      id = R.id.checkb6text;
      TextView checkb6text = ViewBindings.findChildViewById(rootView, id);
      if (checkb6text == null) {
        break missingId;
      }

      id = R.id.checkb7text;
      TextView checkb7text = ViewBindings.findChildViewById(rootView, id);
      if (checkb7text == null) {
        break missingId;
      }

      id = R.id.emaillay;
      LinearLayout emaillay = ViewBindings.findChildViewById(rootView, id);
      if (emaillay == null) {
        break missingId;
      }

      id = R.id.fage;
      CheckBox fage = ViewBindings.findChildViewById(rootView, id);
      if (fage == null) {
        break missingId;
      }

      id = R.id.fbarcode;
      CheckBox fbarcode = ViewBindings.findChildViewById(rootView, id);
      if (fbarcode == null) {
        break missingId;
      }

      id = R.id.fbox;
      CheckBox fbox = ViewBindings.findChildViewById(rootView, id);
      if (fbox == null) {
        break missingId;
      }

      id = R.id.fbtns;
      LinearLayout fbtns = ViewBindings.findChildViewById(rootView, id);
      if (fbtns == null) {
        break missingId;
      }

      id = R.id.fgross;
      CheckBox fgross = ViewBindings.findChildViewById(rootView, id);
      if (fgross == null) {
        break missingId;
      }

      id = R.id.filterlayout;
      LinearLayout filterlayout = ViewBindings.findChildViewById(rootView, id);
      if (filterlayout == null) {
        break missingId;
      }

      id = R.id.fitemcode;
      CheckBox fitemcode = ViewBindings.findChildViewById(rootView, id);
      if (fitemcode == null) {
        break missingId;
      }

      id = R.id.fnetwt;
      CheckBox fnetwt = ViewBindings.findChildViewById(rootView, id);
      if (fnetwt == null) {
        break missingId;
      }

      id = R.id.fourbtns;
      LinearLayout fourbtns = ViewBindings.findChildViewById(rootView, id);
      if (fourbtns == null) {
        break missingId;
      }

      id = R.id.fpurity;
      CheckBox fpurity = ViewBindings.findChildViewById(rootView, id);
      if (fpurity == null) {
        break missingId;
      }

      id = R.id.gimage;
      ImageView gimage = ViewBindings.findChildViewById(rootView, id);
      if (gimage == null) {
        break missingId;
      }

      id = R.id.gtext;
      TextView gtext = ViewBindings.findChildViewById(rootView, id);
      if (gtext == null) {
        break missingId;
      }

      id = R.id.gwttotal;
      TextView gwttotal = ViewBindings.findChildViewById(rootView, id);
      if (gwttotal == null) {
        break missingId;
      }

      id = R.id.headingscroll;
      HorizontalScrollView headingscroll = ViewBindings.findChildViewById(rootView, id);
      if (headingscroll == null) {
        break missingId;
      }

      id = R.id.iboxlayout;
      LinearLayout iboxlayout = ViewBindings.findChildViewById(rootView, id);
      if (iboxlayout == null) {
        break missingId;
      }

      id = R.id.iboxtext;
      TextView iboxtext = ViewBindings.findChildViewById(rootView, id);
      if (iboxtext == null) {
        break missingId;
      }

      id = R.id.icategorytext;
      TextView icategorytext = ViewBindings.findChildViewById(rootView, id);
      if (icategorytext == null) {
        break missingId;
      }

      id = R.id.icatgorylayout;
      LinearLayout icatgorylayout = ViewBindings.findChildViewById(rootView, id);
      if (icatgorylayout == null) {
        break missingId;
      }

      id = R.id.iclearlayout;
      LinearLayout iclearlayout = ViewBindings.findChildViewById(rootView, id);
      if (iclearlayout == null) {
        break missingId;
      }

      id = R.id.icleartext;
      TextView icleartext = ViewBindings.findChildViewById(rootView, id);
      if (icleartext == null) {
        break missingId;
      }

      id = R.id.imgholder;
      RelativeLayout imgholder = ViewBindings.findChildViewById(rootView, id);
      if (imgholder == null) {
        break missingId;
      }

      id = R.id.iproductlayout;
      LinearLayout iproductlayout = ViewBindings.findChildViewById(rootView, id);
      if (iproductlayout == null) {
        break missingId;
      }

      id = R.id.iproducttext;
      TextView iproducttext = ViewBindings.findChildViewById(rootView, id);
      if (iproducttext == null) {
        break missingId;
      }

      id = R.id.irecycler;
      RecyclerView irecycler = ViewBindings.findChildViewById(rootView, id);
      if (irecycler == null) {
        break missingId;
      }

      id = R.id.itemscroll;
      HorizontalScrollView itemscroll = ViewBindings.findChildViewById(rootView, id);
      if (itemscroll == null) {
        break missingId;
      }

      id = R.id.itstatus;
      ImageView itstatus = ViewBindings.findChildViewById(rootView, id);
      if (itstatus == null) {
        break missingId;
      }

      id = R.id.layliststate;
      TextView layliststate = ViewBindings.findChildViewById(rootView, id);
      if (layliststate == null) {
        break missingId;
      }

      id = R.id.listbuttons;
      LinearLayout listbuttons = ViewBindings.findChildViewById(rootView, id);
      if (listbuttons == null) {
        break missingId;
      }

      id = R.id.listlay;
      LinearLayout listlay = ViewBindings.findChildViewById(rootView, id);
      if (listlay == null) {
        break missingId;
      }

      id = R.id.matchedbtn;
      AppCompatButton matchedbtn = ViewBindings.findChildViewById(rootView, id);
      if (matchedbtn == null) {
        break missingId;
      }

      id = R.id.matchgwttotal;
      TextView matchgwttotal = ViewBindings.findChildViewById(rootView, id);
      if (matchgwttotal == null) {
        break missingId;
      }

      id = R.id.matchqtytotal;
      TextView matchqtytotal = ViewBindings.findChildViewById(rootView, id);
      if (matchqtytotal == null) {
        break missingId;
      }

      id = R.id.nemail;
      LinearLayout nemail = ViewBindings.findChildViewById(rootView, id);
      if (nemail == null) {
        break missingId;
      }

      id = R.id.nlist;
      LinearLayout nlist = ViewBindings.findChildViewById(rootView, id);
      if (nlist == null) {
        break missingId;
      }

      id = R.id.nreset;
      LinearLayout nreset = ViewBindings.findChildViewById(rootView, id);
      if (nreset == null) {
        break missingId;
      }

      id = R.id.savelay;
      LinearLayout savelay = ViewBindings.findChildViewById(rootView, id);
      if (savelay == null) {
        break missingId;
      }

      id = R.id.savelay1;
      LinearLayout savelay1 = ViewBindings.findChildViewById(rootView, id);
      if (savelay1 == null) {
        break missingId;
      }

      id = R.id.scrollIndicator;
      View scrollIndicator = ViewBindings.findChildViewById(rootView, id);
      if (scrollIndicator == null) {
        break missingId;
      }

      id = R.id.searchbtn;
      AppCompatButton searchbtn = ViewBindings.findChildViewById(rootView, id);
      if (searchbtn == null) {
        break missingId;
      }

      id = R.id.singlescan;
      LinearLayout singlescan = ViewBindings.findChildViewById(rootView, id);
      if (singlescan == null) {
        break missingId;
      }

      id = R.id.tmgwt;
      TextView tmgwt = ViewBindings.findChildViewById(rootView, id);
      if (tmgwt == null) {
        break missingId;
      }

      id = R.id.tmnetwt;
      TextView tmnetwt = ViewBindings.findChildViewById(rootView, id);
      if (tmnetwt == null) {
        break missingId;
      }

      id = R.id.tmqty;
      TextView tmqty = ViewBindings.findChildViewById(rootView, id);
      if (tmqty == null) {
        break missingId;
      }

      id = R.id.tmswt;
      TextView tmswt = ViewBindings.findChildViewById(rootView, id);
      if (tmswt == null) {
        break missingId;
      }

      id = R.id.totallay;
      LinearLayout totallay = ViewBindings.findChildViewById(rootView, id);
      if (totallay == null) {
        break missingId;
      }

      id = R.id.totalstatus;
      ImageView totalstatus = ViewBindings.findChildViewById(rootView, id);
      if (totalstatus == null) {
        break missingId;
      }

      id = R.id.transferbtn;
      AppCompatButton transferbtn = ViewBindings.findChildViewById(rootView, id);
      if (transferbtn == null) {
        break missingId;
      }

      id = R.id.ttgwt;
      TextView ttgwt = ViewBindings.findChildViewById(rootView, id);
      if (ttgwt == null) {
        break missingId;
      }

      id = R.id.ttnetwt;
      TextView ttnetwt = ViewBindings.findChildViewById(rootView, id);
      if (ttnetwt == null) {
        break missingId;
      }

      id = R.id.ttqty;
      TextView ttqty = ViewBindings.findChildViewById(rootView, id);
      if (ttqty == null) {
        break missingId;
      }

      id = R.id.ttswt;
      TextView ttswt = ViewBindings.findChildViewById(rootView, id);
      if (ttswt == null) {
        break missingId;
      }

      id = R.id.unlabelled;
      AppCompatButton unlabelled = ViewBindings.findChildViewById(rootView, id);
      if (unlabelled == null) {
        break missingId;
      }

      id = R.id.unmatchedbtn;
      AppCompatButton unmatchedbtn = ViewBindings.findChildViewById(rootView, id);
      if (unmatchedbtn == null) {
        break missingId;
      }

      id = R.id.vname;
      View vname = ViewBindings.findChildViewById(rootView, id);
      if (vname == null) {
        break missingId;
      }

      return new FragmentInventoryfragmentBinding((FrameLayout) rootView, avlqtytotal, cancellay,
          catlay, catprolay, catprorecycler, ccagetext, ccbarcodetext, ccboxtext, ccgwttext,
          ccitemcodetext, ccmatchqtytext, ccmgwttext, ccmnetwtext, ccnetwtext, ccpuritytext, cfage,
          cfbarcode, cfbox, cfgross, cfilterlayout, cfitemcode, cfmatchqty, cfmgwt, cfnetwt,
          cfpurity, checkb1text, checkb2text, checkb3text, checkb4text, checkb5text, checkb6text,
          checkb7text, emaillay, fage, fbarcode, fbox, fbtns, fgross, filterlayout, fitemcode,
          fnetwt, fourbtns, fpurity, gimage, gtext, gwttotal, headingscroll, iboxlayout, iboxtext,
          icategorytext, icatgorylayout, iclearlayout, icleartext, imgholder, iproductlayout,
          iproducttext, irecycler, itemscroll, itstatus, layliststate, listbuttons, listlay,
          matchedbtn, matchgwttotal, matchqtytotal, nemail, nlist, nreset, savelay, savelay1,
          scrollIndicator, searchbtn, singlescan, tmgwt, tmnetwt, tmqty, tmswt, totallay,
          totalstatus, transferbtn, ttgwt, ttnetwt, ttqty, ttswt, unlabelled, unmatchedbtn, vname);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
