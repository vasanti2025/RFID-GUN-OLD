// Generated by view binder compiler. Do not edit!
package com.loyalstring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.loyalstring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogDynamicexcel1Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button confirmButton;

  @NonNull
  public final EditText emap;

  @NonNull
  public final RecyclerView recyclerViewFields;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final Spinner spinnerExcelHeadings;

  @NonNull
  public final TextView textViewFieldName;

  private DialogDynamicexcel1Binding(@NonNull LinearLayout rootView, @NonNull Button confirmButton,
      @NonNull EditText emap, @NonNull RecyclerView recyclerViewFields, @NonNull Button saveButton,
      @NonNull Spinner spinnerExcelHeadings, @NonNull TextView textViewFieldName) {
    this.rootView = rootView;
    this.confirmButton = confirmButton;
    this.emap = emap;
    this.recyclerViewFields = recyclerViewFields;
    this.saveButton = saveButton;
    this.spinnerExcelHeadings = spinnerExcelHeadings;
    this.textViewFieldName = textViewFieldName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogDynamicexcel1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogDynamicexcel1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_dynamicexcel1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogDynamicexcel1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.confirmButton;
      Button confirmButton = ViewBindings.findChildViewById(rootView, id);
      if (confirmButton == null) {
        break missingId;
      }

      id = R.id.emap;
      EditText emap = ViewBindings.findChildViewById(rootView, id);
      if (emap == null) {
        break missingId;
      }

      id = R.id.recyclerViewFields;
      RecyclerView recyclerViewFields = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewFields == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.spinnerExcelHeadings;
      Spinner spinnerExcelHeadings = ViewBindings.findChildViewById(rootView, id);
      if (spinnerExcelHeadings == null) {
        break missingId;
      }

      id = R.id.textViewFieldName;
      TextView textViewFieldName = ViewBindings.findChildViewById(rootView, id);
      if (textViewFieldName == null) {
        break missingId;
      }

      return new DialogDynamicexcel1Binding((LinearLayout) rootView, confirmButton, emap,
          recyclerViewFields, saveButton, spinnerExcelHeadings, textViewFieldName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
