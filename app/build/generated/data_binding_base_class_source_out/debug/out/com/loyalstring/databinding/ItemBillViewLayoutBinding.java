// Generated by view binder compiler. Do not edit!
package com.loyalstring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.loyalstring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBillViewLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView barcode;

  @NonNull
  public final TextView gwt;

  @NonNull
  public final ImageView image;

  @NonNull
  public final TextView itemcode;

  @NonNull
  public final TextView netwt;

  @NonNull
  public final TextView product;

  @NonNull
  public final TextView sno;

  private ItemBillViewLayoutBinding(@NonNull LinearLayout rootView, @NonNull TextView barcode,
      @NonNull TextView gwt, @NonNull ImageView image, @NonNull TextView itemcode,
      @NonNull TextView netwt, @NonNull TextView product, @NonNull TextView sno) {
    this.rootView = rootView;
    this.barcode = barcode;
    this.gwt = gwt;
    this.image = image;
    this.itemcode = itemcode;
    this.netwt = netwt;
    this.product = product;
    this.sno = sno;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBillViewLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBillViewLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_bill_view_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBillViewLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barcode;
      TextView barcode = ViewBindings.findChildViewById(rootView, id);
      if (barcode == null) {
        break missingId;
      }

      id = R.id.gwt;
      TextView gwt = ViewBindings.findChildViewById(rootView, id);
      if (gwt == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.itemcode;
      TextView itemcode = ViewBindings.findChildViewById(rootView, id);
      if (itemcode == null) {
        break missingId;
      }

      id = R.id.netwt;
      TextView netwt = ViewBindings.findChildViewById(rootView, id);
      if (netwt == null) {
        break missingId;
      }

      id = R.id.product;
      TextView product = ViewBindings.findChildViewById(rootView, id);
      if (product == null) {
        break missingId;
      }

      id = R.id.sno;
      TextView sno = ViewBindings.findChildViewById(rootView, id);
      if (sno == null) {
        break missingId;
      }

      return new ItemBillViewLayoutBinding((LinearLayout) rootView, barcode, gwt, image, itemcode,
          netwt, product, sno);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
