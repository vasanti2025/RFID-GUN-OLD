// Generated by view binder compiler. Do not edit!
package com.loyalstring.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.loyalstring.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductfragmentBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayout backupbutton;

  @NonNull
  public final CheckBox bbcheckbox;

  @NonNull
  public final LinearLayout bbox;

  @NonNull
  public final TextView bboxtext;

  @NonNull
  public final TextView bcategorytext;

  @NonNull
  public final LinearLayout bcatgorylayout;

  @NonNull
  public final ImageView bgimage;

  @NonNull
  public final LinearLayout bgscanlay;

  @NonNull
  public final TextView bgtext;

  @NonNull
  public final CheckBox bicheckbox;

  @NonNull
  public final LinearLayout blistlay;

  @NonNull
  public final LinearLayout boxlayout;

  @NonNull
  public final TextView boxtext;

  @NonNull
  public final LinearLayout bproductlayout;

  @NonNull
  public final TextView bproducttext;

  @NonNull
  public final LinearLayout bresetbtn;

  @NonNull
  public final LinearLayout bsavelay;

  @NonNull
  public final ImageView bsimage;

  @NonNull
  public final LinearLayout bsscanlay;

  @NonNull
  public final TextView bstext;

  @NonNull
  public final Button bulkbtn;

  @NonNull
  public final LinearLayout bulkheading;

  @NonNull
  public final RelativeLayout bulklay;

  @NonNull
  public final RecyclerView bulkrecycler;

  @NonNull
  public final TextView categorytext;

  @NonNull
  public final LinearLayout catgorylayout;

  @NonNull
  public final LinearLayout fbtns;

  @NonNull
  public final EditText igrossweight;

  @NonNull
  public final TextView imaking;

  @NonNull
  public final RelativeLayout impexplay;

  @NonNull
  public final Button impextbtn;

  @NonNull
  public final EditText inetweight;

  @NonNull
  public final EditText istoneweight;

  @NonNull
  public final LinearLayout pexportbtn;

  @NonNull
  public final LinearLayout pimportbtn;

  @NonNull
  public final LinearLayout productlayout;

  @NonNull
  public final TextView producttext;

  @NonNull
  public final LinearLayout psheet;

  @NonNull
  public final LinearLayout psyncbills;

  @NonNull
  public final LinearLayout psyncbtn;

  @NonNull
  public final LinearLayout pupsyncbtn;

  @NonNull
  public final LinearLayout puritylayout;

  @NonNull
  public final TextView puritytext;

  @NonNull
  public final TextView sbarno;

  @NonNull
  public final LinearLayout singlebarlay;

  @NonNull
  public final Button singlebtn;

  @NonNull
  public final LinearLayout singlefbtns;

  @NonNull
  public final ImageView singleimage;

  @NonNull
  public final RelativeLayout singlelay;

  @NonNull
  public final LinearLayout singlelist;

  @NonNull
  public final LinearLayout singlereset;

  @NonNull
  public final LinearLayout singlesavelay;

  @NonNull
  public final LinearLayout singlescan;

  @NonNull
  public final TextView singletext;

  @NonNull
  public final TextView sitemno;

  @NonNull
  public final LinearLayout tlay;

  @NonNull
  public final TextView totalexistitemstxt;

  @NonNull
  public final TextView totalitemstxt;

  private FragmentProductfragmentBinding(@NonNull FrameLayout rootView,
      @NonNull LinearLayout backupbutton, @NonNull CheckBox bbcheckbox, @NonNull LinearLayout bbox,
      @NonNull TextView bboxtext, @NonNull TextView bcategorytext,
      @NonNull LinearLayout bcatgorylayout, @NonNull ImageView bgimage,
      @NonNull LinearLayout bgscanlay, @NonNull TextView bgtext, @NonNull CheckBox bicheckbox,
      @NonNull LinearLayout blistlay, @NonNull LinearLayout boxlayout, @NonNull TextView boxtext,
      @NonNull LinearLayout bproductlayout, @NonNull TextView bproducttext,
      @NonNull LinearLayout bresetbtn, @NonNull LinearLayout bsavelay, @NonNull ImageView bsimage,
      @NonNull LinearLayout bsscanlay, @NonNull TextView bstext, @NonNull Button bulkbtn,
      @NonNull LinearLayout bulkheading, @NonNull RelativeLayout bulklay,
      @NonNull RecyclerView bulkrecycler, @NonNull TextView categorytext,
      @NonNull LinearLayout catgorylayout, @NonNull LinearLayout fbtns,
      @NonNull EditText igrossweight, @NonNull TextView imaking, @NonNull RelativeLayout impexplay,
      @NonNull Button impextbtn, @NonNull EditText inetweight, @NonNull EditText istoneweight,
      @NonNull LinearLayout pexportbtn, @NonNull LinearLayout pimportbtn,
      @NonNull LinearLayout productlayout, @NonNull TextView producttext,
      @NonNull LinearLayout psheet, @NonNull LinearLayout psyncbills,
      @NonNull LinearLayout psyncbtn, @NonNull LinearLayout pupsyncbtn,
      @NonNull LinearLayout puritylayout, @NonNull TextView puritytext, @NonNull TextView sbarno,
      @NonNull LinearLayout singlebarlay, @NonNull Button singlebtn,
      @NonNull LinearLayout singlefbtns, @NonNull ImageView singleimage,
      @NonNull RelativeLayout singlelay, @NonNull LinearLayout singlelist,
      @NonNull LinearLayout singlereset, @NonNull LinearLayout singlesavelay,
      @NonNull LinearLayout singlescan, @NonNull TextView singletext, @NonNull TextView sitemno,
      @NonNull LinearLayout tlay, @NonNull TextView totalexistitemstxt,
      @NonNull TextView totalitemstxt) {
    this.rootView = rootView;
    this.backupbutton = backupbutton;
    this.bbcheckbox = bbcheckbox;
    this.bbox = bbox;
    this.bboxtext = bboxtext;
    this.bcategorytext = bcategorytext;
    this.bcatgorylayout = bcatgorylayout;
    this.bgimage = bgimage;
    this.bgscanlay = bgscanlay;
    this.bgtext = bgtext;
    this.bicheckbox = bicheckbox;
    this.blistlay = blistlay;
    this.boxlayout = boxlayout;
    this.boxtext = boxtext;
    this.bproductlayout = bproductlayout;
    this.bproducttext = bproducttext;
    this.bresetbtn = bresetbtn;
    this.bsavelay = bsavelay;
    this.bsimage = bsimage;
    this.bsscanlay = bsscanlay;
    this.bstext = bstext;
    this.bulkbtn = bulkbtn;
    this.bulkheading = bulkheading;
    this.bulklay = bulklay;
    this.bulkrecycler = bulkrecycler;
    this.categorytext = categorytext;
    this.catgorylayout = catgorylayout;
    this.fbtns = fbtns;
    this.igrossweight = igrossweight;
    this.imaking = imaking;
    this.impexplay = impexplay;
    this.impextbtn = impextbtn;
    this.inetweight = inetweight;
    this.istoneweight = istoneweight;
    this.pexportbtn = pexportbtn;
    this.pimportbtn = pimportbtn;
    this.productlayout = productlayout;
    this.producttext = producttext;
    this.psheet = psheet;
    this.psyncbills = psyncbills;
    this.psyncbtn = psyncbtn;
    this.pupsyncbtn = pupsyncbtn;
    this.puritylayout = puritylayout;
    this.puritytext = puritytext;
    this.sbarno = sbarno;
    this.singlebarlay = singlebarlay;
    this.singlebtn = singlebtn;
    this.singlefbtns = singlefbtns;
    this.singleimage = singleimage;
    this.singlelay = singlelay;
    this.singlelist = singlelist;
    this.singlereset = singlereset;
    this.singlesavelay = singlesavelay;
    this.singlescan = singlescan;
    this.singletext = singletext;
    this.sitemno = sitemno;
    this.tlay = tlay;
    this.totalexistitemstxt = totalexistitemstxt;
    this.totalitemstxt = totalitemstxt;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductfragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductfragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_productfragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductfragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backupbutton;
      LinearLayout backupbutton = ViewBindings.findChildViewById(rootView, id);
      if (backupbutton == null) {
        break missingId;
      }

      id = R.id.bbcheckbox;
      CheckBox bbcheckbox = ViewBindings.findChildViewById(rootView, id);
      if (bbcheckbox == null) {
        break missingId;
      }

      id = R.id.bbox;
      LinearLayout bbox = ViewBindings.findChildViewById(rootView, id);
      if (bbox == null) {
        break missingId;
      }

      id = R.id.bboxtext;
      TextView bboxtext = ViewBindings.findChildViewById(rootView, id);
      if (bboxtext == null) {
        break missingId;
      }

      id = R.id.bcategorytext;
      TextView bcategorytext = ViewBindings.findChildViewById(rootView, id);
      if (bcategorytext == null) {
        break missingId;
      }

      id = R.id.bcatgorylayout;
      LinearLayout bcatgorylayout = ViewBindings.findChildViewById(rootView, id);
      if (bcatgorylayout == null) {
        break missingId;
      }

      id = R.id.bgimage;
      ImageView bgimage = ViewBindings.findChildViewById(rootView, id);
      if (bgimage == null) {
        break missingId;
      }

      id = R.id.bgscanlay;
      LinearLayout bgscanlay = ViewBindings.findChildViewById(rootView, id);
      if (bgscanlay == null) {
        break missingId;
      }

      id = R.id.bgtext;
      TextView bgtext = ViewBindings.findChildViewById(rootView, id);
      if (bgtext == null) {
        break missingId;
      }

      id = R.id.bicheckbox;
      CheckBox bicheckbox = ViewBindings.findChildViewById(rootView, id);
      if (bicheckbox == null) {
        break missingId;
      }

      id = R.id.blistlay;
      LinearLayout blistlay = ViewBindings.findChildViewById(rootView, id);
      if (blistlay == null) {
        break missingId;
      }

      id = R.id.boxlayout;
      LinearLayout boxlayout = ViewBindings.findChildViewById(rootView, id);
      if (boxlayout == null) {
        break missingId;
      }

      id = R.id.boxtext;
      TextView boxtext = ViewBindings.findChildViewById(rootView, id);
      if (boxtext == null) {
        break missingId;
      }

      id = R.id.bproductlayout;
      LinearLayout bproductlayout = ViewBindings.findChildViewById(rootView, id);
      if (bproductlayout == null) {
        break missingId;
      }

      id = R.id.bproducttext;
      TextView bproducttext = ViewBindings.findChildViewById(rootView, id);
      if (bproducttext == null) {
        break missingId;
      }

      id = R.id.bresetbtn;
      LinearLayout bresetbtn = ViewBindings.findChildViewById(rootView, id);
      if (bresetbtn == null) {
        break missingId;
      }

      id = R.id.bsavelay;
      LinearLayout bsavelay = ViewBindings.findChildViewById(rootView, id);
      if (bsavelay == null) {
        break missingId;
      }

      id = R.id.bsimage;
      ImageView bsimage = ViewBindings.findChildViewById(rootView, id);
      if (bsimage == null) {
        break missingId;
      }

      id = R.id.bsscanlay;
      LinearLayout bsscanlay = ViewBindings.findChildViewById(rootView, id);
      if (bsscanlay == null) {
        break missingId;
      }

      id = R.id.bstext;
      TextView bstext = ViewBindings.findChildViewById(rootView, id);
      if (bstext == null) {
        break missingId;
      }

      id = R.id.bulkbtn;
      Button bulkbtn = ViewBindings.findChildViewById(rootView, id);
      if (bulkbtn == null) {
        break missingId;
      }

      id = R.id.bulkheading;
      LinearLayout bulkheading = ViewBindings.findChildViewById(rootView, id);
      if (bulkheading == null) {
        break missingId;
      }

      id = R.id.bulklay;
      RelativeLayout bulklay = ViewBindings.findChildViewById(rootView, id);
      if (bulklay == null) {
        break missingId;
      }

      id = R.id.bulkrecycler;
      RecyclerView bulkrecycler = ViewBindings.findChildViewById(rootView, id);
      if (bulkrecycler == null) {
        break missingId;
      }

      id = R.id.categorytext;
      TextView categorytext = ViewBindings.findChildViewById(rootView, id);
      if (categorytext == null) {
        break missingId;
      }

      id = R.id.catgorylayout;
      LinearLayout catgorylayout = ViewBindings.findChildViewById(rootView, id);
      if (catgorylayout == null) {
        break missingId;
      }

      id = R.id.fbtns;
      LinearLayout fbtns = ViewBindings.findChildViewById(rootView, id);
      if (fbtns == null) {
        break missingId;
      }

      id = R.id.igrossweight;
      EditText igrossweight = ViewBindings.findChildViewById(rootView, id);
      if (igrossweight == null) {
        break missingId;
      }

      id = R.id.imaking;
      TextView imaking = ViewBindings.findChildViewById(rootView, id);
      if (imaking == null) {
        break missingId;
      }

      id = R.id.impexplay;
      RelativeLayout impexplay = ViewBindings.findChildViewById(rootView, id);
      if (impexplay == null) {
        break missingId;
      }

      id = R.id.impextbtn;
      Button impextbtn = ViewBindings.findChildViewById(rootView, id);
      if (impextbtn == null) {
        break missingId;
      }

      id = R.id.inetweight;
      EditText inetweight = ViewBindings.findChildViewById(rootView, id);
      if (inetweight == null) {
        break missingId;
      }

      id = R.id.istoneweight;
      EditText istoneweight = ViewBindings.findChildViewById(rootView, id);
      if (istoneweight == null) {
        break missingId;
      }

      id = R.id.pexportbtn;
      LinearLayout pexportbtn = ViewBindings.findChildViewById(rootView, id);
      if (pexportbtn == null) {
        break missingId;
      }

      id = R.id.pimportbtn;
      LinearLayout pimportbtn = ViewBindings.findChildViewById(rootView, id);
      if (pimportbtn == null) {
        break missingId;
      }

      id = R.id.productlayout;
      LinearLayout productlayout = ViewBindings.findChildViewById(rootView, id);
      if (productlayout == null) {
        break missingId;
      }

      id = R.id.producttext;
      TextView producttext = ViewBindings.findChildViewById(rootView, id);
      if (producttext == null) {
        break missingId;
      }

      id = R.id.psheet;
      LinearLayout psheet = ViewBindings.findChildViewById(rootView, id);
      if (psheet == null) {
        break missingId;
      }

      id = R.id.psyncbills;
      LinearLayout psyncbills = ViewBindings.findChildViewById(rootView, id);
      if (psyncbills == null) {
        break missingId;
      }

      id = R.id.psyncbtn;
      LinearLayout psyncbtn = ViewBindings.findChildViewById(rootView, id);
      if (psyncbtn == null) {
        break missingId;
      }

      id = R.id.pupsyncbtn;
      LinearLayout pupsyncbtn = ViewBindings.findChildViewById(rootView, id);
      if (pupsyncbtn == null) {
        break missingId;
      }

      id = R.id.puritylayout;
      LinearLayout puritylayout = ViewBindings.findChildViewById(rootView, id);
      if (puritylayout == null) {
        break missingId;
      }

      id = R.id.puritytext;
      TextView puritytext = ViewBindings.findChildViewById(rootView, id);
      if (puritytext == null) {
        break missingId;
      }

      id = R.id.sbarno;
      TextView sbarno = ViewBindings.findChildViewById(rootView, id);
      if (sbarno == null) {
        break missingId;
      }

      id = R.id.singlebarlay;
      LinearLayout singlebarlay = ViewBindings.findChildViewById(rootView, id);
      if (singlebarlay == null) {
        break missingId;
      }

      id = R.id.singlebtn;
      Button singlebtn = ViewBindings.findChildViewById(rootView, id);
      if (singlebtn == null) {
        break missingId;
      }

      id = R.id.singlefbtns;
      LinearLayout singlefbtns = ViewBindings.findChildViewById(rootView, id);
      if (singlefbtns == null) {
        break missingId;
      }

      id = R.id.singleimage;
      ImageView singleimage = ViewBindings.findChildViewById(rootView, id);
      if (singleimage == null) {
        break missingId;
      }

      id = R.id.singlelay;
      RelativeLayout singlelay = ViewBindings.findChildViewById(rootView, id);
      if (singlelay == null) {
        break missingId;
      }

      id = R.id.singlelist;
      LinearLayout singlelist = ViewBindings.findChildViewById(rootView, id);
      if (singlelist == null) {
        break missingId;
      }

      id = R.id.singlereset;
      LinearLayout singlereset = ViewBindings.findChildViewById(rootView, id);
      if (singlereset == null) {
        break missingId;
      }

      id = R.id.singlesavelay;
      LinearLayout singlesavelay = ViewBindings.findChildViewById(rootView, id);
      if (singlesavelay == null) {
        break missingId;
      }

      id = R.id.singlescan;
      LinearLayout singlescan = ViewBindings.findChildViewById(rootView, id);
      if (singlescan == null) {
        break missingId;
      }

      id = R.id.singletext;
      TextView singletext = ViewBindings.findChildViewById(rootView, id);
      if (singletext == null) {
        break missingId;
      }

      id = R.id.sitemno;
      TextView sitemno = ViewBindings.findChildViewById(rootView, id);
      if (sitemno == null) {
        break missingId;
      }

      id = R.id.tlay;
      LinearLayout tlay = ViewBindings.findChildViewById(rootView, id);
      if (tlay == null) {
        break missingId;
      }

      id = R.id.totalexistitemstxt;
      TextView totalexistitemstxt = ViewBindings.findChildViewById(rootView, id);
      if (totalexistitemstxt == null) {
        break missingId;
      }

      id = R.id.totalitemstxt;
      TextView totalitemstxt = ViewBindings.findChildViewById(rootView, id);
      if (totalitemstxt == null) {
        break missingId;
      }

      return new FragmentProductfragmentBinding((FrameLayout) rootView, backupbutton, bbcheckbox,
          bbox, bboxtext, bcategorytext, bcatgorylayout, bgimage, bgscanlay, bgtext, bicheckbox,
          blistlay, boxlayout, boxtext, bproductlayout, bproducttext, bresetbtn, bsavelay, bsimage,
          bsscanlay, bstext, bulkbtn, bulkheading, bulklay, bulkrecycler, categorytext,
          catgorylayout, fbtns, igrossweight, imaking, impexplay, impextbtn, inetweight,
          istoneweight, pexportbtn, pimportbtn, productlayout, producttext, psheet, psyncbills,
          psyncbtn, pupsyncbtn, puritylayout, puritytext, sbarno, singlebarlay, singlebtn,
          singlefbtns, singleimage, singlelay, singlelist, singlereset, singlesavelay, singlescan,
          singletext, sitemno, tlay, totalexistitemstxt, totalitemstxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
